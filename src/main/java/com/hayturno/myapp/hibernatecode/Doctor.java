package com.hayturno.myapp.hibernatecode;

// Generated 15-ago-2015 21:00:45 by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Doctor generated by hbm2java
 */
@Entity
@Table(name = "doctor", catalog = "hayturno")
public class Doctor implements java.io.Serializable {

	private Integer iddoctor;
	private Especialidad especialidad;
	private Persona persona;
	private Set<HorariosDoctor> horariosDoctors = new HashSet<HorariosDoctor>(0);
	private Set<Turno> turnos = new HashSet<Turno>(0);

	public Doctor() {
	}

	public Doctor(Especialidad especialidad, Persona persona) {
		this.especialidad = especialidad;
		this.persona = persona;
	}

	public Doctor(Especialidad especialidad, Persona persona,
			Set<HorariosDoctor> horariosDoctors, Set<Turno> turnos) {
		this.especialidad = especialidad;
		this.persona = persona;
		this.horariosDoctors = horariosDoctors;
		this.turnos = turnos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "iddoctor", unique = true, nullable = false)
	public Integer getIddoctor() {
		return this.iddoctor;
	}

	public void setIddoctor(Integer iddoctor) {
		this.iddoctor = iddoctor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idespecialidad", nullable = false)
	public Especialidad getEspecialidad() {
		return this.especialidad;
	}

	public void setEspecialidad(Especialidad especialidad) {
		this.especialidad = especialidad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpersona", nullable = false)
	public Persona getPersona() {
		return this.persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "doctor")
	public Set<HorariosDoctor> getHorariosDoctors() {
		return this.horariosDoctors;
	}

	public void setHorariosDoctors(Set<HorariosDoctor> horariosDoctors) {
		this.horariosDoctors = horariosDoctors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "doctor")
	public Set<Turno> getTurnos() {
		return this.turnos;
	}

	public void setTurnos(Set<Turno> turnos) {
		this.turnos = turnos;
	}

}
